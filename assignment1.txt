## Assignment Part-1

Q1. Why do we call Python as a general purpose and high-level programming language?

Ans. Python is called general purpose language because it's application is not specific to a single domain instead it can be used in multiple domain serving multiple purpose. Python is also a high level programming language because it is written in human understandable language. While executing it needed to be interpreted and compiled in a machine understandable language.

Q2. Why is Python called a dynamically typed language?

Ans. When we declare or initialise any variables in python we need not to determine it's type that means python will itself assign data types during runtime itself
that means it is a dynamically typed language.

Q3. List some pros and cons of Python programming language?
Ans.
The pros of Python
  Python is easy to learn and read
  Python enhances productivity
  Python has a vast collection of libraries
  Python is free, open-source, and has a vibrant community
  Python is a portable programming language
  Python is an interpreted language
  
The cons of python programming language
  Python has speed limitations
  Python is not so strong with mobile computing
  Python can have runtime errors
  Python consumes a lot of memory space
  Python is not easy to test

Q4. In what all domains can we use Python?
Ans.
  Machine learning / Artificial intelligence
  Desktop GUI
  Data analytics and data visualization 
  Web development
  Game development
  Mobile app development
  Embedded systems
Q5. What are variable and how can we declare them?
Ans.Variables are just a name given to any specific memory location it hold some values.
    syntax-  a=5 #To decare a variable of integer type, We need not to declare its type it will be detected autoomatically while runtime.
             b="Tarique"  #Single quote or double quote can be used to declare a string
Q6. How can we take an input from the user in Python?
Ans.To take input from user in python we can use a function called as input()
    syntax- a=input("Enter a number") #This will display a message "Enter a number" to user and he will be able to enter a number
                                      #Here we must notice that it will take input in string format 
Q7. What is the default datatype of the value that has been taken as an input using input() function?
Ans. String
Q8. What is type casting?
Ans.Type casting means changing the data type of any variable from one data type to another
    ex- a=5            # This will declare a variable a with int type and if we want to convert it in another data type we can do it as follows
        b=float(a)     # This will change the datatype from int to float
  
Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
Ans.Yes we can take more than one input from user using split
    ex- a,b,c=input("Enter three values").split()  # by default we need to provide a single space between these values
        print("Value of a",a,"Value of b",b,"Value of c",c)
        
        
        a,b,c=input("Enter three values").split(",")    # In this case we can seperate our values using a comma
        
Q10. What are keywords?
Ans. Keywords are collection of few reserved words in python that hold special meaning. We can not use keywords in a variable name as it will be confusing for interpreter. some keywords are if, else, for, while e.t.c 
Q11. Can we use keywords as a variable? Support your answer with reason.
Ans.No, we can not use keywords as a variable as these are reserved words that holds some special meaning for example - if we are using for as a variable name than our interpreter recoganise for as a looping statement so it will think that we have written for loop with a wrong syntax there is no way we can tell interpreter that we want to use it as a variable. so, to avoid this kind of confusion it's better to avoid using keywords as a variable.
Q12. What is indentation? What's the use of indentaion in Python?
Ans.Indententation means a blank space produced by leaving some space at the begining of a line. It is used in python as a syntax for example if we are writing for loop then after writing 'for expession: ' we leave some space in the next line with proper indentation such that next statement will belong to for statement. This increases readablitity of the code and also use of bracket is omitted.
Q13. How can we throw some output in Python?
Ans.we can throw some output in python using print() statement. Whatever enclosed inside this curly braces will be output on the terminal.
Q14. What are operators in Python?
Ans. Operators are used to perform operations on variables and values.
Python divides the operators in the following groups:

Arithmetic operators
Assignment operators
Comparison operators
Logical operators
Identity operators
Membership operators
Bitwise operators
Q15. What is difference between / and // operators?
Ans. / is a airthmetic operator when used gives output in decimal form where as // operator gives us values in integer form i.e. all the values after decimal will be lost. ex-  a=5
           b=2
           a/b=2.5
           a//b=2
Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
Ans. print("iNeuron"*4)
Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
Ans.

a=int(input("Please enter a number to check weather it is even or odd"))
if a%2==0:
   print(a,"is a even number")
   
else:
   print(a,"is a odd number")

Q18. What are boolean operator?
Ans.Any operator that gives output in the form of true or false can be termed as boolean opeartor. There are three logical operators that are used to compare values. They evaluate expressions down to Boolean values, returning either True or False .
Q19. What will the output of the following?
```
1 or 0 = 1

0 and 0 = 0

True and False and True = false

1 or 0 or 0 = 1
```
Ans.
Q20. What are conditional statements in Python?
Ans. Conditional statement are those statements in python that controls the flow of execution of code. 
for example- if else is used to conrol the flow of exection i.e. if certain expression will be true it will goes that way or otherwise it will go another way. 
Q21. What is use of 'if', 'elif' and 'else' keywords?
Ans.if any expression written inside if statement is true then execution will go inside it otherwise it will go to else statement. however if statement inside if statement is not true it will check for subsquent elif statements and then goes to else.
Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
Ans. 
```
a=int(input("Please enter your age"))
if a>=18:
  print("I can vote")
else:
  print("I can't vote")
  
```
Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans.
```
numbers=[12, 75, 150, 180, 145, 525, 50]
sum=0
for i in numbers:
  if i%2==0:
    sum=sum+i
print(sum)
```

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
Ans.
```
a=int(input("Please enter first number"))
b=int(input("Please enter second number"))
c=int(input("Please enter third number"))
if a>b:
   if a>c:
      print(a," is greater")
   else:
      print(c," is greater")    
else:
   if b>c:
      print(b," is greater")
   else:
      print(c," is greater")   
```
Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans.
```
numbers = [12, 75, 150, 180, 145, 525, 50]    
for i in numbers:
       if i%5==0:
         if i<150:
            if i>500:
               break    
            print(i," is satisfying all conditions")
```
Q26. What is a string? How can we declare string in Python?
Ans. Strings are nothing but a collection of charcters that binded together. it is an immutable intity and we can use index to iterate over a string.
     To declare a string we need enclose it in either a single quot or double
     ex- a='Tarique'
         b="Tarique"
Q27. How can we access the string using its index?
Ans. we can access each element of string using index.
     ex- for i in a
           print(a[])
           
           this will print each element one by one
Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
Ans.
```
print(string[9:])

```
Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
Ans.
```
string = "Big Data iNeuron"
a=string[9:]
b=""
for i in range(6,-1,-1):
       b=b+a[i]
print(b)   
```
Q30. Resverse the string given in the above question.
Ans.
```
string = "Big Data iNeuron"
b=""
for i in range(len(string)-1,-1,-1):
       b=b+string[i]
print(b) 
```
Q31. How can you delete entire string at once?
Ans.
```
del(string)
```
Q32. What is escape sequence?
Ans.An escape sequence is a sequence of characters that does not represent itself when used inside a character or string literal, but is translated into another character or a sequence of characters that may be difficult or impossible to represent directly.

Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```
Ans.
```
print("'iNeuron's Big Data Course'")
```
Q34. What is a list in Python?
Ans.Lists are used to store multiple items in a single variable.
    Lists are one of 4 built-in data types in Python used to store collections of data, the other 3 are Tuple, Set, and Dictionary, all with different qualities and       usage.
Q35. How can you create a list in Python?
Ans.a=list()
    a.append('xyz')
          or
    a=['xyz',1,2,3]
Q36. How can we access the elements in a list?
Ans.We can access the elements in a list using idex.
        a[0] will refer to 'xyz' i.e. first element
Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 
Ans.
```
print(lst[4][2])
```
Q38. Take a list as an input from the user and find the length of the list.
Ans.
    a=list(input('Enter elements of list using comma').split(','))
    print(len(a))

Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```
Ans.lst[2]='Big'
Q40. What is a tuple? How is it different from list?
Ans.Tuple is also sequence of data but it is different from list as it is immutable and lists are mutable
Q41. How can you create a tuple in Python?
    a=(1,2,3,4,5)
         or
    a=tuple()
Ans.
Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
Ans.No, as tuples are immutable we can not change it's value for lifetime
Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
Ans.No, tuple do not have any function called append
Q44. Take a tuple as an input and print the count of elements in it.
Ans.
```
tup = tuple(input("enter space seperated tuple values").split(" "))
print(len(tup))
```
Q45. What are sets in Python?
Ans. sets are also collection of data in python in which values can not be repeated and are mutable
Q46. How can you create a set?
Ans.
```
a={1,2,3,3,4,5,6}
print(type(a))

      or
      
b= set(i for i in range(1,100))
print(b,type(b))
```
Q47. Create a set and add "iNeuron" in your set.
Ans.
```
a= set()
a.add("iNeuron")
print(a)
```

Q48. Try to add multiple values using add() function.
Ans.a= set()
a.add("iNeuron")
a.add(1,2,3,4)
print(a)

Throws an error as it says add can take only one input at a time
Q49. How is update() different from add()?
Ans.Update can be used to add multiple value at once by passng multiple parameters seperated by a comma. Whereas add can take only one value at once.
Q50. What is clear() in sets?
Ans.clear() i used to remove all the elements of set and make it an empty set.
Q51. What is frozen set?
Ans.Python frozenset() Method creates an immutable Set object from an iterable. It is a built-in Python function. As it is a set object therefore we cannot have duplicate values in the frozenset
Q52. How is frozen set different from set?
Ans. Frozen set is just an immutable version of a Python set object. While elements of a set can be modified at any time, elements of the frozen set remain the same after creation. Due to this, frozen sets can be used as keys in Dictionary or as elements of another set.
Q53. What is union() in sets? Explain via code.
Ans. Union() function in python is just as same as we have in maths. It combine all the values from two sets i.e. it will have all the values from set A or set B and all the that are common in both will b considered once . (A union B) = A + B -(A intersection B) 
Q54. What is intersection() in sets? Explain via code.
Ans.It represent set of all the values that are common to both sets. 
Q55. What is dictionary ibn Python?
Ans.Dictionary is also a collection of data wher data are stored in key and value pair i.e. for each value there will be a key related to it and this way we look up any value in time complexity O(1) 
Q56. How is dictionary different from all other data structures.
Ans.Dictionary in Python on the other hand is an unordered collection of data values, used to store data values like a map, which unlike other Data Types that hold only single value as an element, Dictionary holds key:value pair. Key-value is provided in the dictionary to make it more optimized
Q57. How can we declare a dictionary in Python?
Ans.
```
dict={"a":1,'b':2,'c':3}
print(dict)

dict1={}
dict1['a']=3
dict1['b']=4
print(dict1)
```
Q58. What will the output of the following?
```
var = {}
print(type(var))
```
Ans. <class 'dict'> i.e. it belongs to dictionary class
Q59. How can we add an element in a dictionary?
Ans. dict['key']=value
Q60. Create a dictionary and access all the values in that dictionary.
Ans.dict={"a":1,'b':2,'c':3}
    for key in dict:
        print(dict[key])
Q61. Create a nested dictionary and access all the element in the inner dictionary.
Ans.
```
dict={"a":1,'b':2,'c':3,'d':{'one':1,'two':2,'three':3}}
for key in dict['d']:
    print(dict['d'][key])
```
Q62. What is the use of get() function?
Ans. If we call a get function using dictionary and pass a key (i.e. dict.key('a')) iit will return value as an output. If we pass a value that is not available in key then it return none. It accepet one more parameter as a value and same it will return if the specified key is not present in dictionary. lets understand this witha na example
```
dict={"a":1,'b':2,'c':3,'d':{'one':1,'two':2,'three':3}}
print(dict.get('a'))                        # output- 1
print(dict.get('z'))                        # output-None
print(dict.get('z','No such key found'))    # output-No such key found
```
Q63. What is the use of items() function?
Ans.items() function used in dictionary to make both key and value an iterable object and we can acces both key and value using any variable ex-
    dict={"a":1,'b':2,'c':3,'d':4}
    for k,v in dict.items():
       print(k,':',v)
Q64. What is the use of pop() function?
Ans. The list pop in Python removes and returns the popped value, or in other words, the item present at the specified index value

    a=lst.pop(2)  #This will remove element at index 2 from the list and return the same value which then we are assigning to variable a.
Q65. What is the use of popitems() function?
Ans.Python dictionary popitem() method removes the last inserted key-value pair from the dictionary and returns it as a tuple.
```
ex-dict={"a":1,'b':2,'c':3,'d':4}
print(dict.popitem())  #output-4
print(dict.popitem())  #output-3
print(dict.popitem())  #output-2
print(dict.popitem())  #output-1
```
Q66. What is the use of keys() function?
Ans. keys() funtion is used to retrieve each key as an iterable from a dictionary
```
dict={"a":1,'b':2,'c':3,'d':4}
for keys in dict.keys():
    print(keys)
```
Q67. What is the use of values() function?
Ans. values() funtion is used to retrieve each value as an iterable from a dictionary
```
dict={"a":1,'b':2,'c':3,'d':4}
for values in dict.values():
    print(values)
```
Q68. What are loops in Python?
Ans.Looping means repeating something over and over until a particular condition is satisfied. A for loop in Python is a control flow statement that is used to repeatedly execute a group of statements as long as the condition is satisfied. Such a type of statement is also known as an iterative statement.10
Q69. How many type of loop are there in Python?
Ans. There are two types of loop in python
  i.e. for loop and while loop
Q70. What is the difference between for and while loops?
Ans. for loop is used when the exact number of iteration is known whereas while loop is used when number of iteration is unknown and end conditions are known. If the condition is not put up in 'for' loop, then loop iterates infinite times. If the condition is not put up in 'while' loop, it provides compilation error.
Q71. What is the use of continue statement?
Ans.Continue statement is used inside a loop to continue the current iteration. i.e. whenever there is a continue statement then it will skip all the codes after it for only current iteration and pointer will move to next iteration.
Q72. What is the use of break statement?
 Ans. Break statement is used to break the loop and the pointer will come out of the loop whenever it encounters break statement.
Q73. What is the use of pass statement?
Ans. The pass statement is used as a placeholder for future code. When the pass statement is executed, nothing happens, but you avoid getting an error when empty code is not allowed. Empty code is not allowed in loops, function definitions, class definitions, or in if statements.
Q74. What is the use of range() function?
Ans. The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and stops before a specified number. please note that it stops before i.e. specified number is exclusive.
 i.e. for in range(1,10)  in this case it will iterate upto 9.
Q75. How can you loop over a dictionary?
    There are many ways to loop over dictionary.
    Using keys()- 
    for keys in dict.keys():
        print(keys,':',dict[keys])
    Without using keys
    for keys in dict:
        print(keys,':',dict[keys])
    using items()
    for k,v in dict.items():
        print(k,':',v)
### Coding problems
Q76. Write a Python program to find the factorial of a given number.
```
a=int(input("Enter a number to find its factorial"))
fact=1
for i in range(1,a+1):
   fact=fact*i
   
print(fact)
```
or
```
a=int(input("Enter a number to find its factorial"))
def fact(n):
 if n==0 or n==1:
  return 1
 else:
  return n*fact(n-1)
print(fact(a))
```

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100
```
p=int(input("Enter Principal amount in rupees"))
r=int(input("Enter Rate of Intrest"))
t=int(input("Enter time period in years"))

si=(p*r*t)/100
print(si)
```

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
```
p=int(input("Enter Principal amount in rupees"))
r=int(input("Enter Rate of Intrest"))
t=int(input("Enter time period in years"))
ci=p*(1+(r/100))
for i in range(0,t-1):
 ci=ci*(1+(r/100))
print(ci)
```
Q79. Write a Python program to check if a number is prime or not.
```
lst=list(x for x in range(2,101))
for a in lst:
 flag=False   
 for i in range(2,a):
    if a%i==0:
        flag=True
        break
 if flag==False:
        print(a,"Prime number")
 else:
    print(a,"Not a Prime number")        

```

Q80. Write a Python program to check Armstrong Number.
```
rng=int(input("Enter a range upto which you want to print Armstrong number"))
lst=[x for x in range(1,rng)]
for num in lst:

 temp=num
 sum=0
 count=0
 while temp>0:
     temp=temp//10
     count=count+1  
 temp=num   
 while temp>0:
     rem=temp%10
     rem=rem**count    
     sum=sum+rem
     temp=temp//10     
 if sum==num:
    print(num)
```

Q81. Write a Python program to find the n-th Fibonacci Number.
```
rng=int(input("Enter a value of n to find fibonnaci series upto n"))
print("0 1",end=' ')
n1=1
n2=1
for i in range(1,rng-1):
   n=n1+n2
   print(n,' ',end='')
   n1=n2
   n2=n
```

Q82. Write a Python program to interchange the first and last element in a list.
```
lst=input("Enter elements of list seperated by a space").split(' ')
for i in range(0,len(lst)):
   lst[i]=int(lst[i])
temp=lst[-1]
lst[-1]=lst[0]
lst[0]=temp
print(lst)
```

Q83. Write a Python program to swap two elements in a list.
```
lst=input("Enter elements of list seperated by a space").split(' ')
i=int(input("Enter 1st index to swap"))
j=int(input("Enter 2nd index to swap"))
for x in range(0,len(lst)):
   lst[x]=int(lst[x])
print("List before swapping",lst)   
temp=lst[j]
lst[j]=lst[i]
lst[i]=temp
print("List after swapping",lst)
```

Q84. Write a Python program to find N largest element from a list.
```
lst=input("Enter elements of list seperated by a space").split(' ')
n=int(input("Enter value of n to find n largest element"))
for a in range(0,len(lst)):
      lst[a]=int(lst[a])
lst1=[]
count=5
while count>0:
 max=lst[0]
 for i in lst:
   if i>max:
      max=i
 print(max)     
 lst1.append(max)  
 lst.remove(max)                  
 count=count-1
print(lst1)
```

Q85. Write a Python program to find cumulative sum of a list.

Q86. Write a Python program to check if a string is palindrome or not.

Q87. Write a Python program to remove i'th element from a string.

Q88. Write a Python program to check if a substring is present in a given string.

Q89. Write a Python program to find words which are greater than given length k.

Q90. Write a Python program to extract unquire dictionary values.

Q91. Write a Python program to merge two dictionary.

Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
```

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
```

Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```

Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
```

Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```
Ans.
```
n=5
for i in range(0,n):
    for j in range(0,i+1):
        print("*",end=" ")
    print("")   

```
Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```
Ans.
```
n=5
k=n
for i in range (1,n+1):
    for j in range(0,k-1):
        print(end=" ")
    k-=1  
    
    for l in range (0,i):
        print("*",end="")
    print("")
    
```    
Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
Ans.
```
n=5
for i in range (1,n+1):
    for j in range(0,n-i):
        print(end=" ")
    for l in range (0,i):
        print("*",end=" ")
    print("")

         or
```         
        
n=5
for i in range (0,n+1):
    for j in range(0,n-i):
        print(end=" ")
    for l in range (0,i):
        print("*",end=" ")
    print("")
    
```
Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```


Ans.
```
n=5
for i in range(0,n+1):
    for j in range(1,i+1):
        print(j,end=" ")
    print("")    
    
```
Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```
Ans.
```
n=5
for i in range(0,n+1):
    for j in range(1,i+1):
        print(chr(64+i),end=" ")
    print("")  
    
```    
